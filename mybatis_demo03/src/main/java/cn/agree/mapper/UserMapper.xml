<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="cn.agree.mapper.UserMapper">
    <!--findAll-->
    <select id="findAll" resultType="cn.agree.domain.User">
        SELECT * FROM  user
    </select>

    <!--添加用户-->
    <insert id="saveUser" parameterType="cn.agree.domain.User">
        <!--
            keyColum: 要查询的自增列的列名
            keyProperty: 将返回值赋值给User对象的id属性
            resultType: 返回值的类型
            order: 表示selectKey里面里面的SQL和外面的SQL语句执行顺序
                AFTER: 外面SQL先执行
                BEFORE: selectkey里面的先执行
        -->
        <selectKey keyColumn="id" keyProperty="id" resultType="java.lang.Integer" order="AFTER">
            SELECT  LAST_INSERT_ID()
        </selectKey>
        INSERT INTO user(username,birthday,sex,address)VALUES(#{username},#{birthday},#{sex},#{address})
    </insert>

    <!--修改用户-->
    <update id="updateUser" parameterType="cn.agree.domain.User">
        UPDATE user SET username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} WHERE id=#{id}
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        DELETE FROM user WHERE id=#{id}
    </delete>

    <!--模糊查询-->
    <select id="findUserByUsername" parameterType="string" resultType="cn.agree.domain.User">
        <!-- SELECT * FROM user WHERE username LIKE #{username} -->
        SELECT * FROM user WHERE username LIKE '${value}'
    </select>

    <!-- UserResultMap -->
    <resultMap id="UserResultMap" type="cn.agree.domain.User">
        <id column="id_" property="id" />
        <result column="username_" property="username" />
        <result column="birthday_" property="birthday" />
        <result column="sex_" property="sex" />
        <result column="address_" property="address" />
    </resultMap>

    <!--定义SQL片段-->
    <sql id="selectUserTable">
         SELECT id, username, birthday, sex, address FROM USER
    </sql>

    <!--根据用户名查用户-->
    <select id="findByVo" parameterType="cn.agree.domain.QueryVo" resultType="cn.agree.domain.User">
        SELECT id, username, birthday, sex, address from USER WHERE 1=1
        <if test="user.id!=null">
            AND id=#{user.id}
        </if>
        <if test="user.username!=null and user.username!=''">
            AND username=#{user.username}
        </if>
    </select>

    <!--简单类型-->
    <select id="findUserCount" resultType="Integer">
        SELECT COUNT(*) FROM user;
    </select>

    <!--根据ID查询-->
    <!--根据id查询-->
    <select id="findByUserId" parameterType="java.lang.Integer" resultType="cn.agree.domain.User">
        SELECT * FROM user WHERE id=#{id}
    </select>

    <!--findByRang-->
    <select id="findByRang" parameterType="cn.agree.domain.QueryVo" resultType="cn.agree.domain.User">
        <include refid="selectUserTable" />
        <where>
            <if test="ids!=null and ids.size>0">
                <foreach collection="ids" item="id" close=")" open="AND id IN (" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>


    <!--一对多-->
    <resultMap id="userAccountsResultMap" type="cn.agree.domain.User">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="sex" property="sex" />
        <result column="birthday" property="birthday" />
        <result column="address" property="address" />
        <!--一对多映射-->
        <collection property="accountList" ofType="cn.agree.domain.Account">
            <id column="aid" property="id" />
            <result column="auid" property="uid" />
            <result column="amoney" property="money" />
        </collection>
    </resultMap>

    <select id="findUserAccountList" resultMap="userAccountsResultMap">
        SELECT u.*, acc.id aid,acc.uid auid, acc.money amoney FROM user u LEFT JOIN account1 acc ON u.id = acc.uid
    </select>


</mapper>

